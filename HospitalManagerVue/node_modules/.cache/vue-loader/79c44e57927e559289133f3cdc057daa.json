{"remainingRequest":"C:\\Users\\lan\\Desktop\\springboot+vue医院管理系统\\springboot+vue医院管理系统【www.java1234.com】\\HospitalManagerVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lan\\Desktop\\springboot+vue医院管理系统\\springboot+vue医院管理系统【www.java1234.com】\\HospitalManagerVue\\src\\views\\Login.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\lan\\Desktop\\springboot+vue医院管理系统\\springboot+vue医院管理系统【www.java1234.com】\\HospitalManagerVue\\src\\views\\Login.vue","mtime":1713779456758},{"path":"C:\\Users\\lan\\Desktop\\springboot+vue医院管理系统\\springboot+vue医院管理系统【www.java1234.com】\\HospitalManagerVue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1713776628558},{"path":"C:\\Users\\lan\\Desktop\\springboot+vue医院管理系统\\springboot+vue医院管理系统【www.java1234.com】\\HospitalManagerVue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1713776633005},{"path":"C:\\Users\\lan\\Desktop\\springboot+vue医院管理系统\\springboot+vue医院管理系统【www.java1234.com】\\HospitalManagerVue\\node_modules\\postcss-loader\\src\\index.js","mtime":1713776630274},{"path":"C:\\Users\\lan\\Desktop\\springboot+vue医院管理系统\\springboot+vue医院管理系统【www.java1234.com】\\HospitalManagerVue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1713775641724},{"path":"C:\\Users\\lan\\Desktop\\springboot+vue医院管理系统\\springboot+vue医院管理系统【www.java1234.com】\\HospitalManagerVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713776626710},{"path":"C:\\Users\\lan\\Desktop\\springboot+vue医院管理系统\\springboot+vue医院管理系统【www.java1234.com】\\HospitalManagerVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1713776631410}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNvZGVJbnB1dCB7CiAgICB3aWR0aDogNzAlOwogICAgbWFyZ2luLXJpZ2h0OiAxMHB4Owp9Ci5maW5kUGFzc3dvcmQgewogICAgbWFyZ2luLXRvcDogMHB4Owp9Ci5sb2dpbi1pbmRleCB7CiAgICBiYWNrZ3JvdW5kOiAjMmI0YjZiOwogICAgaGVpZ2h0OiAxMDAlOwogICAgcG9zaXRpb246IHJlbGF0aXZlOwp9Ci5taWQtaW5kZXggewogICAgb3BhY2l0eTogMC45OwogICAgd2lkdGg6IDQ1MHB4OwogICAgaGVpZ2h0OiAzOTBweDsKICAgIGJhY2tncm91bmQ6IHdoaXRlOwogICAgLy/nu53lr7nlrprkvY3vvIznm7jlr7nkuo7mnIDlt6bkuIrop5LmnaXor7QKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIGxlZnQ6IDcwJTsKICAgIHRvcDogNTAlOwogICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7Cn0KLmxvZ28taW5kZXggewogICAgYmFja2dyb3VuZDogd2hpdGU7CiAgICBoZWlnaHQ6IDEzMHB4OwogICAgd2lkdGg6IDEzMHB4OwogICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgcGFkZGluZzogMTBweDsKICAgIC8v5a2Q57ud54i255u4LOS9v+S4gOS4qmRpduaCrOaMguWcqOWPpuS4gOS4qmRpduS4iuS4remXtAogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgbGVmdDogNTAlOwogICAgdG9wOiAwOwogICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7CgogICAgYm9yZGVyOiAxcHggc29saWQgI2VlZTsKICAgIGJveC1zaGFkb3c6IDBweCAwcHggMTBweCAjZGRkOwoKICAgIGltZyB7CiAgICAgICAgaGVpZ2h0OiAxMDAlOwogICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTsKICAgICAgICBiYWNrZ3JvdW5kOiAjZWVlZWVlOwogICAgfQp9CgoubG9naW5Gb3JtIHsKICAgIG1hcmdpbi10b3A6IDEyMHB4Owp9Ci5lbC1mb3JtLWl0ZW0gewogICAgbWFyZ2luLWxlZnQ6IDIwcHg7CiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7Cn0KLy/op5LoibLljZXpgIkKLnJvbGUgewogICAgbWFyZ2luLWxlZnQ6IDkwcHg7CiAgICBtYXJnaW4tcmlnaHQ6IDkwcHg7Cn0KLy/mjInpkq4KLmJ0bnMgewogICAgZGlzcGxheTogZmxleDsKICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7CiAgICBoZWlnaHQ6IDI1cHg7Cn0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappingsmnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"login-index\" :style=\"backgroundDiv\">\n        <div class=\"mid-index\">\n            <i\n                style=\"\n                    top: 40px;\n                    font-size: 28px;\n                    left: 20px;\n                    position: absolute;\n                \"\n                class=\"iconfont icon-r-love\"\n            >\n                登录医院管理系统\n            </i>\n            <el-form\n                :model=\"loginForm\"\n                :rules=\"loginRules\"\n                ref=\"ruleForm\"\n                class=\"loginForm\"\n            >\n                <el-form-item prop=\"id\">\n                    <!--必须绑定v-model输入框才能输入字符---->\n                    <el-input v-model=\"loginForm.id\">\n                        <i\n                            slot=\"prefix\"\n                            class=\"iconfont icon-r-user1\"\n                            style=\"font-size: 22px\"\n                        ></i>\n                    </el-input>\n                </el-form-item>\n                <el-form-item prop=\"password\">\n                    <el-input v-model=\"loginForm.password\" show-password>\n                        <i\n                            slot=\"prefix\"\n                            class=\"iconfont icon-r-lock\"\n                            style=\"font-size: 22px\"\n                        ></i>\n                    </el-input>\n                </el-form-item>\n\n                <!-- 角色单选框 -->\n                <el-form-item class=\"role\">\n                    <el-radio-group v-model=\"role\" size=\"small\">\n                        <el-radio label=\"患者\"></el-radio>\n                        <el-radio label=\"医生\"></el-radio>\n                        <el-radio label=\"管理员\"></el-radio>\n                    </el-radio-group>\n                </el-form-item>\n\n                <el-form-item class=\"btns\">\n                    <el-button\n                        type=\"primary\"\n                        style=\"font-size: 18px\"\n                        @click=\"submitLoginForm('ruleForm')\"\n                    >\n                        <i\n                            class=\"iconfont icon-r-yes\"\n                            style=\"font-size: 20px\"\n                        ></i>\n                        登录</el-button\n                    >\n                    <el-button\n                        type=\"info\"\n                        style=\"font-size: 18px\"\n                        @click=\"registerFormVisible = true\"\n                    >\n                        <i\n                            class=\"iconfont icon-r-add\"\n                            style=\"font-size: 20px\"\n                        ></i>\n                        注册新账号</el-button\n                    >\n                </el-form-item>\n              <el-form-item>\n<!--                <div class=\"options\"><a href=\"http://www.java1234.com/a/bysj/javaweb/\" target=\"_blank\"><font color=\"red\"><b>Java1234收藏整理</b></font></a></div>-->\n              </el-form-item>\n            </el-form>\n        </div>\n\n        <!-- 注册对话框 -->\n        <el-dialog title=\"用户注册\" :visible.sync=\"registerFormVisible\">\n            <el-form\n                class=\"findPassword\"\n                :model=\"registerForm\"\n                :rules=\"registerRules\"\n                ref=\"registerForm\"\n            >\n                <el-form-item label=\"账号\" label-width=\"80px\" prop=\"pId\">\n                    <el-input v-model.number=\"registerForm.pId\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"性别\" label-width=\"80px\">\n                    <el-radio v-model=\"registerForm.pGender\" label=\"男\"\n                        >男</el-radio\n                    >\n                    <el-radio v-model=\"registerForm.pGender\" label=\"女\"\n                        >女</el-radio\n                    >\n                </el-form-item>\n                <el-form-item label=\"密码\" label-width=\"80px\" prop=\"pPassword\">\n                    <el-input v-model=\"registerForm.pPassword\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"姓名\" label-width=\"80px\" prop=\"pName\">\n                    <el-input v-model=\"registerForm.pName\"></el-input>\n                </el-form-item>\n                <el-form-item\n                    label=\"出生日期\"\n                    label-width=\"80px\"\n                    prop=\"pBirthday\"\n                >\n                    <el-date-picker\n                        v-model=\"registerForm.pBirthday\"\n                        type=\"date\"\n                        placeholder=\"选择日期\"\n                        value-format=\"yyyy-MM-dd\"\n                    >\n                    </el-date-picker>\n                </el-form-item>\n                <el-form-item label=\"手机号\" label-width=\"80px\" prop=\"pPhone\">\n                    <el-input v-model=\"registerForm.pPhone\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"邮箱\" label-width=\"80px\" prop=\"pEmail\">\n                    <el-input v-model=\"registerForm.pEmail\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"身份证号\" label-width=\"80px\" prop=\"pCard\">\n                    <el-input v-model=\"registerForm.pCard\"></el-input>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button\n                    @click=\"registerFormVisible = false\"\n                    style=\"font-size: 18px\"\n                    >\n<!--                  <i-->\n<!--                        class=\"iconfont icon-r-left\"-->\n<!--                        style=\"font-size: 20px\"-->\n<!--                    ></i>-->\n                    取 消</el-button\n                >\n                <el-button\n                    type=\"primary\"\n                    @click=\"registerClick('registerForm')\"\n                    style=\"font-size: 18px\"\n                    ><i class=\"iconfont icon-r-yes\" style=\"font-size: 20px\"></i>\n                    确 定</el-button\n                >\n            </div>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nimport request from \"@/utils/request.js\";\nimport { setToken } from \"@/utils/storage.js\";\nimport { toLoad } from \"@/utils/initialize.js\";\n\nexport default {\n    name: \"Login\",\n    data() {\n        var validateMoblie = (rule, value, callback) => {\n            if (value === undefined) {\n                callback(new Error(\"请输入手机号\"));\n            } else {\n                let reg =\n                    /^1(3[0-9]|4[5,7]|5[0,1,2,3,5,6,7,8,9]|6[2,5,6,7]|7[0,1,7,8]|8[0-9]|9[1,8,9])\\d{8}$/;\n                if (!reg.test(value)) {\n                    callback(new Error(\"请输入合法的手机号\"));\n                }\n                callback();\n            }\n        };\n        var validateCard = (rule, value, callback) => {\n            if (value === undefined) {\n                callback(new Error(\"请输入身份证号\"));\n            } else {\n                let reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/;\n                if (!reg.test(value)) {\n                    callback(new Error(\"请输入合法的身份证号码\"));\n                }\n                callback();\n            }\n        };\n        var validatePass = (rule, value, callback) => {\n            if (value === \"\") {\n                callback(new Error(\"请输入密码\"));\n            } else {\n                if (this.findForm.checkPassword !== \"\") {\n                    this.$refs.findForm.validateField(\"checkPassword\");\n                }\n                callback();\n            }\n        };\n        var validatePass2 = (rule, value, callback) => {\n            if (value === \"\") {\n                callback(new Error(\"请再次输入密码\"));\n            } else if (value !== this.findForm.newPassword) {\n                callback(new Error(\"两次输入密码不一致!\"));\n            } else {\n                callback();\n            }\n        };\n        return {\n            //背景图片\n            backgroundDiv: {\n                backgroundImage:\n                    \"url(\" + require(\"../assets/doctor.jpeg\") + \")\",\n                backgroundRepeat: \"no-repeat\",\n                backgroundSize: \"100% 100%\",\n            },\n            loginForm: {\n                id: \"\",\n                password: \"\",\n            },\n            loginRules: {\n                id: [\n                    {\n                        required: true,\n                        message: \"请输入账号编号\",\n                        trigger: \"blur\",\n                    },\n                    {\n                        min: 3,\n                        max: 50,\n                        message: \"长度在 3到 50 个字符\",\n                        trigger: \"blur\",\n                    },\n                ],\n                password: [\n                    { required: true, message: \"请输入密码\", trigger: \"blur\" },\n                ],\n            },\n            role: \"患者\",\n            findRole: \"患者\",\n            //找回密码\n            findFormVisible: false,\n            findForm: {\n                code: \"\",\n                newPassword: \"\",\n                checkPassword: \"\",\n                pEmail: \"\",\n            },\n\n            findRules: {\n                pEmail: [\n                    {\n                        required: true,\n                        message: \"请输入邮箱地址\",\n                        trigger: \"blur\",\n                    },\n                    {\n                        type: \"email\",\n                        message: \"请输入正确的邮箱地址\",\n                        trigger: [\"blur\", \"change\"],\n                    },\n                ],\n                code: [\n                    {\n                        required: true,\n                        message: \"请输入验证码\",\n                        trigger: \"blur\",\n                    },\n                ],\n                newPassword: [{ validator: validatePass, trigger: \"blur\" }],\n                checkPassword: [{ validator: validatePass2, trigger: \"blur\" }],\n            },\n            totalTime: 60,\n            content: \"发送验证码\",\n            canClick: true,\n            //注册\n            registerFormVisible: false,\n            registerForm: {\n                pGender: \"男\",\n            },\n            registerRules: {\n                pId: [\n                    { required: true, message: \"请输入账号\", trigger: \"blur\" },\n                    {\n                        type: \"number\",\n                        message: \"账号必须数字类型\",\n                        trigger: \"blur\",\n                    },\n                ],\n                pPassword: [\n                    { required: true, message: \"请输入密码\", trigger: \"blur\" },\n                    {\n                        min: 4,\n                        max: 50,\n                        message: \"长度在 4到 50 个字符\",\n                        trigger: \"blur\",\n                    },\n                ],\n                pName: [\n                    { required: true, message: \"请输入姓名\", trigger: \"blur\" },\n                    {\n                        min: 2,\n                        max: 8,\n                        message: \"长度在 2到 8 个字符\",\n                        trigger: \"blur\",\n                    },\n                ],\n                pEmail: [\n                    { required: true, message: \"请输入邮箱\", trigger: \"blur\" },\n                    {\n                        type: \"email\",\n                        message: \"请输入正确的邮箱地址\",\n                        trigger: [\"blur\", \"change\"],\n                    },\n                ],\n                pPhone: [{ validator: validateMoblie }],\n                pCard: [{ validator: validateCard }],\n                pBirthday: [\n                    {\n                        required: true,\n                        message: \"选择出生日期\",\n                        trigger: \"blur\",\n                    },\n                ],\n            },\n        };\n    },\n    mounted() {\n        toLoad()\n    },\n    methods: {\n        //点击注册确认按钮\n        registerClick(formName) {\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    request\n                        .get(\"patient/addPatient\", {\n                            params: {\n                                pId: this.registerForm.pId,\n                                pName: this.registerForm.pName,\n                                pPassword: this.registerForm.pPassword,\n                                pGender: this.registerForm.pGender,\n                                pEmail: this.registerForm.pEmail,\n                                pPhone: this.registerForm.pPhone,\n                                pCard: this.registerForm.pCard,\n                                pBirthday: this.registerForm.pBirthday,\n                            },\n                        })\n                        .then((res) => {\n                            if (res.data.status !== 200)\n                                return this.$message.error(\n                                    \"账号或邮箱已被占用！\"\n                                );\n                            this.registerFormVisible = false;\n                            this.$message.success(\"注册成功！\");\n                            console.log(res);\n                        });\n                } else {\n                    console.log(\"error submit!!\");\n                    return false;\n                }\n            });\n        },\n        // 点击找回密码确认按钮\n        findPassword(findForm) {\n            this.$refs[findForm].validate((valid) => {\n                if (valid) {\n                    //如果是选中患者\n                    if (this.findRole === \"患者\") {\n                        request\n                            .get(\"patient/findPassword\", {\n                                params: {\n                                    pEmail: this.findForm.pEmail,\n                                    pPassword: this.findForm.newPassword,\n                                    code: this.findForm.code,\n                                },\n                            })\n                            .then((res) => {\n                                if (res.data.status !== 200)\n                                    return this.$message.error(\n                                        \"验证码错误或者已过期！！！\"\n                                    );\n                                this.$message.success(\"密码修改成功！！请登录\");\n                                this.findFormVisible = false;\n                            });\n                    }\n                    //如果是选中管理员\n                    if (this.findRole === \"管理员\") {\n                        request\n                            .get(\"admin/findPassword\", {\n                                params: {\n                                    aEmail: this.findForm.pEmail,\n                                    aPassword: this.findForm.newPassword,\n                                    code: this.findForm.code,\n                                },\n                            })\n                            .then((res) => {\n                                if (res.data.status !== 200)\n                                    return this.$message.error(\n                                        \"验证码错误或者已过期！！！\"\n                                    );\n                                this.$message.success(\"密码修改成功！！请登录\");\n                                this.findFormVisible = false;\n                            });\n                    }\n                    //如果是选中患者\n                    if (this.findRole === \"医生\") {\n                        request\n                            .get(\"doctor/findPassword\", {\n                                params: {\n                                    dEmail: this.findForm.pEmail,\n                                    dPassword: this.findForm.newPassword,\n                                    code: this.findForm.code,\n                                },\n                            })\n                            .then((res) => {\n                                if (res.data.status !== 200)\n                                    return this.$message.error(\n                                        \"验证码错误或者已过期！！！\"\n                                    );\n                                this.$message.success(\"密码修改成功！！请登录\");\n                                this.findFormVisible = false;\n                            });\n                    }\n                } else {\n                    console.log(\"error submit!!\");\n                    return false;\n                }\n            });\n        },\n        //点击发送验证码按钮\n        sendEmail() {\n            //倒计时\n            if (!this.canClick) return; //改动的是这两行代码\n            this.canClick = false;\n            this.content = this.totalTime + \"s后重新发送\";\n            let clock = window.setInterval(() => {\n                this.totalTime--;\n                this.content = this.totalTime + \"s后重新发送\";\n                if (this.totalTime < 0) {\n                    window.clearInterval(clock);\n                    this.content = \"重新发送验证码\";\n                    this.totalTime = 10;\n                    this.canClick = true; //这里重新开启\n                }\n            }, 1000);\n\n            //如果是选中患者\n            if (this.findRole === \"患者\") {\n                request\n                    .get(\"patient/sendEmail\", {\n                        params: {\n                            pEmail: this.findForm.pEmail,\n                        },\n                    })\n                    .then((res) => {\n                        console.log(this.findForm.pEmail);\n                        console.log(res);\n                        if (res.data.status !== 200)\n                            return this.$message.error(\n                                \"该邮箱暂未注册！请先注册！\"\n                            );\n                        this.$message.success(\"验证码发送成功！\");\n                    });\n            }\n            //如果是选中管理员\n            if (this.findRole === \"管理员\") {\n                request\n                    .get(\"admin/sendEmail\", {\n                        params: {\n                            aEmail: this.findForm.pEmail,\n                        },\n                    })\n                    .then((res) => {\n                        console.log(this.findForm.pEmail);\n                        console.log(res);\n                        if (res.data.status !== 200)\n                            return this.$message.error(\n                                \"该邮箱暂未注册！请先注册！\"\n                            );\n                        this.$message.success(\"验证码发送成功！\");\n                    });\n            }\n            //如果是选中医生\n            if (this.findRole === \"医生\") {\n                request\n                    .get(\"doctor/sendEmail\", {\n                        params: {\n                            dEmail: this.findForm.pEmail,\n                        },\n                    })\n                    .then((res) => {\n                        console.log(this.findForm.pEmail);\n                        console.log(res);\n                        if (res.data.status !== 200)\n                            return this.$message.error(\n                                \"该邮箱暂未注册！请先注册！\"\n                            );\n                        this.$message.success(\"验证码发送成功！\");\n                    });\n            }\n        },\n        //提交表单\n        submitLoginForm(formName) {\n            if (!/^\\d+$/.test(this.loginForm.id)) {\n                this.$message.error(\"用户名有误\");\n                return;\n            }\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    if (this.role === \"管理员\") {\n                        var params = new URLSearchParams();\n                        params.append(\"aId\", this.loginForm.id);\n                        params.append(\"aPassword\", this.loginForm.password);\n\n                        request\n                            .post(\"admin/login\", params)\n                            .then((res) => {\n                                console.log(res);\n                                if (res.data.status != 200)\n                                    return this.$message.error(\n                                        \"用户名或密码错误\"\n                                    );\n                                setToken(res.data.data.token);\n                                this.$router.push(\"/adminLayout\");\n                            })\n                            .catch((e) => {\n                                console.log(e);\n                                if (\n                                    e.response == undefined ||\n                                    e.response.data == undefined\n                                ) {\n                                    this.$message({\n                                        showClose: true,\n                                        message: e,\n                                        type: \"error\",\n                                        duration: 5000,\n                                    });\n                                } else {\n                                    this.$message({\n                                        showClose: true,\n                                        message: e.response.data,\n                                        type: \"error\",\n                                        duration: 5000,\n                                    });\n                                }\n                            });\n                    }\n                    if (this.role === \"医生\") {\n                        var params1 = new URLSearchParams();\n                        params1.append(\"dId\", this.loginForm.id);\n                        params1.append(\"dPassword\", this.loginForm.password);\n\n                        request\n                            .post(\"doctor/login\", params1)\n                            .then((res) => {\n                                console.log(res);\n                                if (res.data.status != 200)\n                                    return this.$message.error(\n                                        \"用户名或密码错误\"\n                                    );\n                                setToken(res.data.data.token);\n                                this.$router.push(\"/doctorLayout\");\n                            })\n                            .catch((e) => {\n                                console.log(e);\n                                if (\n                                    e.response == undefined ||\n                                    e.response.data == undefined\n                                ) {\n                                    this.$message({\n                                        showClose: true,\n                                        message: e,\n                                        type: \"error\",\n                                        duration: 5000,\n                                    });\n                                } else {\n                                    this.$message({\n                                        showClose: true,\n                                        message: e.response.data,\n                                        type: \"error\",\n                                        duration: 5000,\n                                    });\n                                }\n                            });\n                    }\n                    if (this.role === \"患者\") {\n                        var params2 = new URLSearchParams();\n                        params2.append(\"pId\", this.loginForm.id);\n                        params2.append(\"pPassword\", this.loginForm.password);\n\n                        request\n                            .post(\"patient/login\", params2)\n                            .then((res) => {\n                                console.log(res);\n                                if (res.data.status != 200)\n                                    return this.$message.error(\n                                        \"用户名或密码错误\"\n                                    );\n                                setToken(res.data.data.token);\n                                this.$router.push(\"/patientLayout\");\n                            })\n                            .catch((e) => {\n                                console.log(e);\n                                if (\n                                    e.response == undefined ||\n                                    e.response.data == undefined\n                                ) {\n                                    this.$message({\n                                        showClose: true,\n                                        message: e,\n                                        type: \"error\",\n                                        duration: 5000,\n                                    });\n                                } else {\n                                    this.$message({\n                                        showClose: true,\n                                        message: e.response.data,\n                                        type: \"error\",\n                                        duration: 5000,\n                                    });\n                                }\n                            });\n                    }\n                } else {\n                    console.log(\"error submit!!\");\n                    return false;\n                }\n            });\n        },\n    }\n};\n</script>\n\n<style lang=\"scss\">\n.codeInput {\n    width: 70%;\n    margin-right: 10px;\n}\n.findPassword {\n    margin-top: 0px;\n}\n.login-index {\n    background: #2b4b6b;\n    height: 100%;\n    position: relative;\n}\n.mid-index {\n    opacity: 0.9;\n    width: 450px;\n    height: 390px;\n    background: white;\n    //绝对定位，相对于最左上角来说\n    position: absolute;\n    left: 70%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n}\n.logo-index {\n    background: white;\n    height: 130px;\n    width: 130px;\n    border-radius: 50%;\n    padding: 10px;\n    //子绝父相,使一个div悬挂在另一个div上中间\n    position: absolute;\n    left: 50%;\n    top: 0;\n    transform: translate(-50%, -50%);\n\n    border: 1px solid #eee;\n    box-shadow: 0px 0px 10px #ddd;\n\n    img {\n        height: 100%;\n        width: 100%;\n        border-radius: 50%;\n        background: #eeeeee;\n    }\n}\n\n.loginForm {\n    margin-top: 120px;\n}\n.el-form-item {\n    margin-left: 20px;\n    margin-right: 20px;\n}\n//角色单选\n.role {\n    margin-left: 90px;\n    margin-right: 90px;\n}\n//按钮\n.btns {\n    display: flex;\n    justify-content: flex-end;\n    height: 25px;\n}\n</style>\n"]}]}